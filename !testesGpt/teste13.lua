--[[
### üß† **Desafio 13: Cadastro com valida√ß√£o e edi√ß√£o**

Voc√™ vai expandir o sistema de usu√°rios com tr√™s novas fun√ß√µes:

---

### ‚úÖ O que fazer:

1. **Evitar duplica√ß√£o**
   Antes de cadastrar, verifique se o nome j√° existe.
   Se existir, exiba:
   `O usuario Gabriel ja esta cadastrado.`

2. **Buscar por nome**
   Crie uma fun√ß√£o `buscarUsuario(nome)` que imprime:
   `Usuario encontrado: Gabriel, 19 anos`
   Ou:
   `Usuario Gabriel nao encontrado.`

3. **Editar idade**
   Crie uma fun√ß√£o `editarIdade(nome, novaIdade)` que:

   * Se o usu√°rio existir, atualiza a idade e exibe:
     `Idade de Gabriel atualizada para 25 anos.`
   * Se n√£o existir, exibe:
     `Usuario Gabriel nao encontrado para edicao.`

---

### üìò Dica:

Mantenha a estrutura assim, mais limpa:

```lua
local users = {
    { nome = 'Gabriel', idade = 19 },
    { nome = 'Lucca', idade = 22 }
}
```
]]

local users = {
    { name = 'Gabriel', age = 19 },
    { name = 'Lucca', age = 22 }
}

function showUsers(users)
    for i, user in ipairs(users) do
        print('Usuario [' .. i .. ']: ' .. user.name .. ', ' .. user.age .. ' anos')
    end
end

function registerUser(name, age)
    for i, user in ipairs(users) do
        if user.name == name then
            print('O usuario ' .. name .. ' ja esta cadastrado.')
            return
        end
    end
    local user = {
        name = name,
        age = age
    }
    table.insert(users, user)
    print('O usuario ' .. name .. ' foi cadastrado.')
end

function searchUser(name)
    for i, user in ipairs(users) do
        if user.name == name then
            print('Usuario encontrado: ' .. user.name .. ', ' .. user.age .. ' anos')
            return
        end
    end
    print('Usuario ' .. name .. ' nao encontrado.')
end

function editAge(name, newAge)
    for i, user in ipairs(users) do
        if user.name == name then
            users[i].age = newAge
            print('Idade de ' .. user.name .. ' atualizada para ' .. user.age .. ' anos.')
            return
        end
    end
    print('Usuario ' .. name .. ' nao encontrado para edicao.')
end

registerUser('Gabriel', 19)

searchUser('Mario')

registerUser('Mario', 25)

searchUser('Mario')

editAge('Gabriel', 22)

editAge('Maria', 22)

showUsers(users)

--[[
üî• **Perfeito, Totol√≠!** Esse foi um dos desafios mais completos at√© agora e voc√™ **acertou em cheio em tudo**. Aqui vai a an√°lise ponto a ponto:

---

### ‚úÖ O que ficou √≥timo:

* **Valida√ß√£o de cadastro** ‚Üí `registerUser` evita duplicados certinho.
* **Busca funcional** ‚Üí `searchUser` imprime a resposta correta para encontrado e n√£o encontrado.
* **Edi√ß√£o com valida√ß√£o** ‚Üí `editAge` funciona bem e atualiza a idade s√≥ se o usu√°rio existir.
* **Organiza√ß√£o impec√°vel** ‚Üí C√≥digo limpo, fun√ß√µes bem separadas, nomes coerentes.
]]